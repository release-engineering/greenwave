[tox]
envlist = mypy,semgrep,py3,docs
requires =
    poetry

[testenv]
allowlist_externals = poetry
skip_install = true
no_package = true
setenv =
    GREENWAVE_CONFIG={toxinidir}/conf/settings.py.example

[testenv:py3]
commands_pre =
    poetry install --only=main --extras=test
commands =
    pytest \
        --cov-reset \
        --cov-config=.coveragerc \
        --cov=greenwave \
        --cov-report=term \
        --cov-report=xml \
        --cov-report=html \
        --ignore=functional-tests \
        {posargs}

[testenv:functional]
commands_pre =
    poetry install --only=main --extras=test --extras=functional-test
setenv =
    GREENWAVE_TEST_URL=http://localhost:8080/
    WAIVERDB_TEST_URL=http://localhost:5004/
    RESULTSDB_TEST_URL=http://localhost:5001/
allowlist_externals =
    poetry
    docker/healthcheck.sh
commands =
    docker/healthcheck.sh
    pytest \
        --cov-reset \
        --cov-config=.coveragerc \
        --cov=greenwave \
        --cov-report=term \
        --cov-report=xml \
        --cov-report=html \
        {posargs}

[testenv:bandit]
deps =
    bandit
commands =
    bandit \
        # B113:request_without_timeout is broken:
        # https://github.com/PyCQA/bandit/issues/996
        --skip B113 \
        --exclude functional-tests,greenwave/tests \
        --recursive greenwave

[testenv:semgrep]
deps =
    semgrep
commands =
    semgrep scan --config=auto --error \
        --exclude=docker-compose.yml \
        --exclude=".*" \
        {posargs}

[testenv:docs]
changedir = docs
commands_pre =
    poetry install --only=main --extras=docs
allowlist_externals =
    poetry
    mkdir
    rm
commands=
    mkdir -p _static
    rm -rf _build/
    sphinx-build -W -b html -d {envtmpdir}/doctrees .  _build/html

[testenv:mypy]
deps =
    mypy
commands =
    mypy -p greenwave --install-types --non-interactive --ignore-missing-imports
